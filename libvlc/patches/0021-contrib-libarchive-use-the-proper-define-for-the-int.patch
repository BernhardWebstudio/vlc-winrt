From 36779be322801c8bb4d0559244bbac682ca23e79 Mon Sep 17 00:00:00 2001
From: Steve Lhomme <robux4@ycbcr.xyz>
Date: Fri, 27 Mar 2020 16:33:33 +0100
Subject: [PATCH 21/28] contrib: libarchive: use the proper define for the
 internal mode_t

---
 ...try-use-the-proper-define-for-mode_t.patch | 43 +++++++++++++++++++
 contrib/src/libarchive/rules.mak              |  1 +
 2 files changed, 44 insertions(+)
 create mode 100644 contrib/src/libarchive/0002-archive_entry-use-the-proper-define-for-mode_t.patch

diff --git a/contrib/src/libarchive/0002-archive_entry-use-the-proper-define-for-mode_t.patch b/contrib/src/libarchive/0002-archive_entry-use-the-proper-define-for-mode_t.patch
new file mode 100644
index 0000000000..14c3216e13
--- /dev/null
+++ b/contrib/src/libarchive/0002-archive_entry-use-the-proper-define-for-mode_t.patch
@@ -0,0 +1,43 @@
+From 93a8b303904e40261ac58fbd95eb338d6b9cb1df Mon Sep 17 00:00:00 2001
+From: Steve Lhomme <robux4@ycbcr.xyz>
+Date: Fri, 27 Mar 2020 16:26:07 +0100
+Subject: [PATCH 2/4] archive_entry: use the proper define for mode_t
+
+---
+ libarchive/archive_entry.c | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
+
+diff --git a/libarchive/archive_entry.c b/libarchive/archive_entry.c
+index 72c644e6..7afec1b1 100644
+--- a/libarchive/archive_entry.c
++++ b/libarchive/archive_entry.c
+@@ -353,7 +353,7 @@ archive_entry_devminor(struct archive_entry *entry)
+ 		return minor(entry->ae_stat.aest_dev);
+ }
+ 
+-mode_t
++__LA_MODE_T
+ archive_entry_filetype(struct archive_entry *entry)
+ {
+ 	return (AE_IFMT & entry->acl.mode);
+@@ -525,7 +525,7 @@ archive_entry_ino64(struct archive_entry *entry)
+ 	return (entry->ae_stat.aest_ino);
+ }
+ 
+-mode_t
++__LA_MODE_T
+ archive_entry_mode(struct archive_entry *entry)
+ {
+ 	return (entry->acl.mode);
+@@ -598,7 +598,7 @@ _archive_entry_pathname_l(struct archive_entry *entry,
+ 	return (archive_mstring_get_mbs_l(&entry->ae_pathname, p, len, sc));
+ }
+ 
+-mode_t
++__LA_MODE_T
+ archive_entry_perm(struct archive_entry *entry)
+ {
+ 	return (~AE_IFMT & entry->acl.mode);
+-- 
+2.26.0.windows.1
+
diff --git a/contrib/src/libarchive/rules.mak b/contrib/src/libarchive/rules.mak
index 7c2aa6e9be..664c8b59b6 100644
--- a/contrib/src/libarchive/rules.mak
+++ b/contrib/src/libarchive/rules.mak
@@ -17,6 +17,7 @@ $(TARBALLS)/libarchive-$(LIBARCHIVE_VERSION).tar.gz:
 libarchive: libarchive-$(LIBARCHIVE_VERSION).tar.gz .sum-libarchive
 	$(UNPACK)
 	$(APPLY) $(SRC)/libarchive/0001-Fix-build-failure-without-STATVFS.patch
+	$(APPLY) $(SRC)/libarchive/0002-archive_entry-use-the-proper-define-for-mode_t.patch
 ifdef HAVE_ANDROID
 	$(APPLY) $(SRC)/libarchive/android.patch
 endif
-- 
2.26.0.windows.1

